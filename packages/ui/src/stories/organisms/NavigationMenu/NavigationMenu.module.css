:root {
  --btn-primary-background: #466df9;
  --btn-secondary-background: rgba(86, 86, 86, 0.073);
  --color: rgb(33, 33, 33);
  --rounded: 0.4rem;
  --size: 16px;
  --size-small: 14px;
  --padding-button: 10px 15px;
  --shadow: inset 0 0px 0 1px rgb(219 219 219 / 66%);
}

.Root {
  position: relative;
  display: flex;
  justify-content: center;
  width: 100vw;
  z-index: 1;
}

.MenuList {
  display: flex;
  justify-content: center;
  background-color: transparent;
  border-radius: var(--rounded);
  list-style: none;
  margin: 0;
  padding: 0;
}

.Trigger,
.Link {
  all: unset;
  padding: 8px 12px;
  outline: none;
  user-select: none;
  font-weight: 500;
  line-height: 1;
  border-radius: var(--rounded);
  font-size: 15px;
  color: var(--color);
  &:focus {
    box-shadow: 0 0 0 2px black;
  }
  &:hover {
    background-color: rgba(189, 189, 189, 0.16);
  }
}

.Trigger {
  display: flex;
  align-items: center;
  justify-content: space-between;
  gap: 2px;
}

.Link {
  display: block;
  text-decoration: none;
  font-size: 15px;
  line-height: 1;
}

.Content {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  display: inline-block;
  animation-duration: 250ms;
  animation-timing-function: ease;
  &[data-motion="from-start"] {
    animation-name: enterFromLeft;
  }
  &[data-motion="from-end"] {
    animation-name: enterFromRight;
  }
  &[data-motion="to-start"] {
    animation-name: exitToLeft;
  }
  &[data-motion="to-end"] {
    animation-name: exitToRight;
  }
  @media only screen and (min-width: 600px) {
    width: auto;
  }
}

.Indicator {
  display: flex;
  align-items: flex-end;
  justify-content: center;
  height: 10px;
  top: 100%;
  overflow: hidden;
  z-index: 1;
  transition:
    width,
    transform 250ms ease;
  &[data-state="visible"] {
    animation: fadeIn 200ms ease;
  }
  &[data-state="hidden"] {
    animation: fadeOut 200ms ease;
  }
}

.Viewport {
  position: relative;
  transform-origin: top center;
  margin-top: 10px;
  width: 100%;
  background-color: #f8f8f8;
  border-radius: 6px;
  overflow: hidden;
  box-shadow: var(--shadow);
  height: var(--radix-navigation-menu-viewport-height);
  transition:
    width,
    height,
    300ms ease;
  &[data-state="open"] {
    animation: scaleIn 200ms ease;
  }
  &[data-state="closed"] {
    animation: scaleOut 200ms ease;
  }
  @media only screen and (min-width: 600px) {
    width: var(--radix-navigation-menu-viewport-width);
  }
}

.List {
  display: flex;
  flex-direction: column;
  width: max-content !important;
  padding: 1rem;
  margin: 0;
  list-style: none;
  @media only screen and (min-width: 600px) {
    &:global(.one) {
      width: 500px;
      grid-template-columns: 0.75fr 1fr;
    }
    &:global(.two) {
      width: 600px;
      grid-auto-flow: column;
      grid-template-rows: repeat(3, 1fr);
    }
  }
}

.List hr {
  width: calc(100% + (1rem * 2));
  margin-left: -1rem;
  height: 1px;
  border: 1px solid rgba(51, 51, 51, 0.105);
  margin-block: 1rem;
}

.ListItemLink {
  all: unset;
  cursor: pointer;
  display: block;
  width: max-content;
  outline: none;
  text-decoration: none;
  user-select: none;
  padding: 12px;
  border-radius: var(--rounded);
  font-size: 15px;
  line-height: 1;
  &:focus {
    box-shadow: 0 0 0 2px gray;
  }
  &:hover {
    background-color: var(--btn-secondary-background);
  }
}

.ListItemHeading {
  font-weight: 500;
  line-height: 1.2;
  margin-bottom: 5px;
  color: black;
}

.ListItemText {
  all: unset;
  color: black;
  line-height: 1.4;
  font-weight: initial;
}

.Callout {
  display: flex;
  justify-content: flex-end;
  flex-direction: column;
  width: 100%;
  height: 100%;
  background: linear-gradient(135deg, var(--purple-9) 0%, var(--indigo-9) 100%);
  border-radius: 6px;
  padding: 25px;
  text-decoration: none;
  outline: none;
  user-select: none;
  &:focus {
    box-shadow: 0 0 0 2px var(--violet-7);
  }
}

.CalloutHeading {
  color: white;
  font-size: 18px;
  font-weight: 500;
  line-height: 1.2;
  margin-top: 16px;
  margin-bottom: 7px;
}

.CalloutText {
  all: unset;
  color: var(--mauve-4);
  font-size: 14px;
  line-height: 1.3;
}

.ViewportPosition {
  position: absolute;
  display: flex;
  justify-content: center;
  width: 100%;
  top: 100%;
  left: 0;
  perspective: 2000px;
}

.CaretDown {
  position: relative;
  color: black;
  top: 1px;
  transition: transform 250ms ease;
  [data-state="open"] > & {
    transform: rotate(-180deg);
  }
}

.Arrow {
  position: relative;
  top: 70%;
  background-color: white;
  width: 10px;
  height: 10px;
  transform: rotate(45deg);
  border-top-left-radius: 2px;
}

@keyframes enterFromRight {
  from {
    opacity: 0;
    transform: translateX(200px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes enterFromLeft {
  from {
    opacity: 0;
    transform: translateX(-200px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes exitToRight {
  from {
    opacity: 1;
    transform: translateX(0);
  }
  to {
    opacity: 0;
    transform: translateX(200px);
  }
}

@keyframes exitToLeft {
  from {
    opacity: 1;
    transform: translateX(0);
  }
  to {
    opacity: 0;
    transform: translateX(-200px);
  }
}

@keyframes scaleIn {
  from {
    opacity: 0;
    transform: rotateX(-30deg) scale(0.9);
  }
  to {
    opacity: 1;
    transform: rotateX(0deg) scale(1);
  }
}

@keyframes scaleOut {
  from {
    opacity: 1;
    transform: rotateX(0deg) scale(1);
  }
  to {
    opacity: 0;
    transform: rotateX(-10deg) scale(0.95);
  }
}

@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes fadeOut {
  from {
    opacity: 1;
  }
  to {
    opacity: 0;
  }
}
